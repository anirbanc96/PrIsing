expression(paste(epsilon, " = ", 5)))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.77,0.25),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
# saving the plot
ggsave(plot = est.plot, filename = "MPLEvsBeta.pdf", device = "pdf",
width = 4, height = 3)
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/HIV Transmission Network/Results/DataBasedSimulation/Social Network")
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/HIV Transmission Network/Results/DataBasedSimulation/Social Network")
beta.est.nonpriv <- read.csv("Non-Private.csv")[,-1]
beta.est.priv <- read.csv("Private.csv")[,-1]
beta.range <- as.vector(beta.est.priv$beta.range)
beta.len <- length(beta.range)
# Plotting true beta vs MPLE estimate for private and non-private estimates
betaest.np <- matrix(0, nrow = beta.len, ncol = 4)
colnames(betaest.np) <- c("beta", "mean", "up", "down")
betaest.np <- as.data.frame(betaest.np)
# Making data frame of non-private estimates
betaest.np <- betaest.np %>%
mutate(beta = beta.range) %>%
mutate(mean = apply(beta.est.nonpriv[,-1], 1, mean)) %>%
mutate(up = mean + apply(beta.est.nonpriv[,-1], 1, sd)) %>%
mutate(down = mean - apply(beta.est.nonpriv[,-1], 1, sd))
# Making data frame of private estimates
betaest.p <- matrix(0, nrow = beta.len, ncol = 4)
colnames(betaest.p) <- c("beta", "mean", "up", "down")
betaest.p <- as.data.frame(betaest.p)
betaest.p <- betaest.p %>%
mutate(beta = beta.range) %>%
mutate(mean = apply(beta.est.priv[,-1], 1, mean)) %>%
mutate(up = mean + apply(beta.est.priv[,-1], 1, sd)) %>%
mutate(down = mean - apply(beta.est.priv[,-1], 1, sd))
# Plotting comparison of non-private and private MPLE
est.plot <- betaest.np %>%
ggplot(aes(x = beta, y = beta)) +
geom_line(aes(x = beta, y = beta), lty = "dashed") +
geom_point(aes(x = beta, y = betaest.p$mean), color = "darkorange2",
size = 2) +
geom_errorbar(data = betaest.p, aes(x = beta, ymin = down, ymax = up,
color = "Private"), size = 1) +
geom_point(aes(x = beta, y = mean), color = "navy", size = 2) +
geom_errorbar(aes(x = beta, ymin = down, ymax = up, color = "Non-Private"),
size = 1) +
labs(title = TeX(r'(Private and Non-Private MPLE)'), x = TeX(r'($\beta$)'),
y = TeX(r'(MPLE)'), color = "Legend Title\n") +
theme_bw() +
scale_colour_manual("Privacy", breaks = c("Non-Private", "Private"),
values = c("cornflowerblue", "orange"),
labels = c(expression(paste(epsilon, " = ", infinity)),
expression(paste(epsilon, " = ", 5)))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
write.csv(beta.est.nonpriv, "Non-Private.csv")
write.csv(beta.est.priv, "Private.csv")
# saving the plot
ggsave(plot = est.plot, filename = "HIVSocialNetworkSim.pdf", device = "pdf",
width = 4, height = 3)
beta.est.nonpriv <- read.csv("Non-Private.csv")[,-1]
beta.est.priv <- read.csv("Private.csv")[,-1]
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/PolBlogs Network/Results/DataBased Simulation")
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/PolBlogs Network/Results/DataBased Simulation")
beta.est.nonpriv <- read.csv("Non-Private.csv")[,-1]
beta.est.priv <- read.csv("Private.csv")[,-1]
beta.range <- as.vector(beta.est.priv$beta.range)
beta.len <- length(beta.range)
# Plotting true beta vs MPLE estimate for private and non-private estimates
betaest.np <- matrix(0, nrow = beta.len, ncol = 4)
colnames(betaest.np) <- c("beta", "mean", "up", "down")
betaest.np <- as.data.frame(betaest.np)
# Making data frame of non-private estimates
betaest.np <- betaest.np %>%
mutate(beta = beta.range) %>%
mutate(mean = apply(beta.est.nonpriv[,-c(1:2)], 1, mean)) %>%
mutate(up = mean + apply(beta.est.nonpriv[,-c(1:2)], 1, sd)) %>%
mutate(down = mean - apply(beta.est.nonpriv[,-c(1:2)], 1, sd))
# Making data frame of private estimates
betaest.p <- matrix(0, nrow = beta.len, ncol = 4)
colnames(betaest.p) <- c("beta", "mean", "up", "down")
betaest.p <- as.data.frame(betaest.p)
betaest.p <- betaest.p %>%
mutate(beta = beta.range) %>%
mutate(mean = apply(beta.est.priv[,-c(1:2)], 1, mean)) %>%
mutate(up = mean + apply(beta.est.priv[,-c(1:2)], 1, sd)) %>%
mutate(down = mean - apply(beta.est.priv[,-c(1:2)], 1, sd))
# Plotting comparison of non-private and private MPLE
est.plot <- betaest.np %>%
ggplot(aes(x = beta, y = beta)) +
geom_line(aes(x = beta, y = beta), lty = "dashed") +
geom_point(aes(x = beta, y = betaest.p$mean), color = "darkorange2",
size = 2) +
geom_errorbar(data = betaest.p, aes(x = beta, ymin = down, ymax = up,
color = "Private"), size = 1) +
geom_point(aes(x = beta, y = mean), color = "navy", size = 2) +
geom_errorbar(aes(x = beta, ymin = down, ymax = up, color = "Non-Private"),
size = 1) +
labs(title = TeX(r'(Private and Non-Private MPLE)'), x = TeX(r'($\beta$)'),
y = TeX(r'(MPLE)'), color = "Legend Title\n") +
theme_bw() +
scale_colour_manual("Privacy", breaks = c("Non-Private", "Private"),
values = c("cornflowerblue", "orange"),
labels = c(expression(paste(epsilon, " = ", infinity)),
expression(paste(epsilon, " = ", 5)))) +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
write.csv(beta.est.nonpriv, "Non-Private.csv")
write.csv(beta.est.priv, "Private.csv")
# saving the plot
ggsave(plot = est.plot, filename = "PolBlogsSocial.pdf", device = "pdf",
width = 4, height = 3)
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/HIV Transmission Network/Results/MSEBetaNPvsP")
MSE.dat <- read.csv("MSEvsEpsilonBetahatPNP.csv")
View(MSE.dat)
MSE.dat <- read.csv("MSEvsEpsilonBetahatPNP.csv")[,-1]
View(MSE.dat)
MSE.dat <- read.csv("MSEvsEpsilonBetahatPNP.csv")[,-1]
epsilon.vec <- MSE.dat$epsilon.vec
MSE.plot.mat <- as_tibble(matrix(0, nrow = epsilon.len, ncol = 4))
colnames(MSE.plot.mat) <- c("epsilon", "mean", "up", "down")
MSE.dat <- read.csv("MSEvsEpsilonBetahatPNP.csv")[,-1]
epsilon.vec <- MSE.dat$epsilon.vec
epsilon.len <- length(epsilon.vec)
MSE.plot.mat <- as_tibble(matrix(0, nrow = epsilon.len, ncol = 4))
colnames(MSE.plot.mat) <- c("epsilon", "mean", "up", "down")
MSE.plot.mat <- MSE.plot.mat %>%
mutate(epsilon = epsilon.vec) %>%
mutate(mean = apply(MSE.dat[,-1], 1, mean)) %>%
mutate(up = apply(MSE.dat[,-1], 1, sd)) %>%
mutate(down = apply(MSE.dat[,-1], 1, sd))
MSE.plot.mat[,1] <- as.factor(epsilon.vec)
MSE.plot <- MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "slategray1") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "cornflowerblue", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "navy", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(plot = MSE.plot, filename = "MSEvsEpsilonBetahatPNP.pdf", device = "pdf",
width = 4, height = 3)
MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "lightpink") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "orangered1", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "firebrick", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "lightpink1") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "orangered1", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "firebrick", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "thistle2") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "orangered1", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "firebrick", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
MSE.plot <- MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "lightpink") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "orangered1", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "firebrick", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/HIV Transmission Network/Results/MSEBetaNPvsP")
ggsave(plot = MSE.plot, filename = "MSEvsEpsilonBetahatPNP.pdf", device = "pdf",
width = 4, height = 3)
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/PolBlogs Network/Results/MSEBetaNPvsP")
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/PolBlogs Network/Results/MSEBetaNPvsP")
MSE.dat <- read.csv("MSEvsEpsilonBetahatPNP.csv")[,-1]
epsilon.vec <- MSE.dat$epsilon.vec
epsilon.len <- length(epsilon.vec)
MSE.plot.mat <- as_tibble(matrix(0, nrow = epsilon.len, ncol = 4))
colnames(MSE.plot.mat) <- c("epsilon", "mean", "up", "down")
MSE.plot.mat <- MSE.plot.mat %>%
mutate(epsilon = epsilon.vec) %>%
mutate(mean = apply(MSE.dat[,-1], 1, mean)) %>%
mutate(up = apply(MSE.dat[,-1], 1, sd)) %>%
mutate(down = apply(MSE.dat[,-1], 1, sd))
MSE.plot.mat[,1] <- as.factor(epsilon.vec)
MSE.plot <- MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "lightpink") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "orangered1", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "firebrick", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(plot = MSE.plot, filename = "MSEvsEpsilonBetahatPNP.pdf", device = "pdf",
width = 4, height = 3)
MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "plum2") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "mediumpurple1", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "purple4", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "plum2") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "mediumpurple3", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "purple4", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "thistle1") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "mediumpurple3", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "purple4", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "thistle2") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "mediumpurple3", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "purple4", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(plot = MSE.plot, filename = "MSEvsEpsilonBetahatPNP.pdf", device = "pdf",
width = 4, height = 3)
MSE.plot <- MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "thistle2") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "mediumpurple3", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "purple4", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(plot = MSE.plot, filename = "MSEvsEpsilonBetahatPNP.pdf", device = "pdf",
width = 4, height = 3)
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/HIV Transmission Network/Results/MSEBetaNPvsP")
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/HIV Transmission Network/Results/MSEBetaNPvsP")
MSE.dat <- read.csv("MSEvsEpsilonBetahatPNP.csv")[,-1]
epsilon.vec <- MSE.dat$epsilon.vec
epsilon.len <- length(epsilon.vec)
MSE.plot.mat <- as_tibble(matrix(0, nrow = epsilon.len, ncol = 4))
colnames(MSE.plot.mat) <- c("epsilon", "mean", "up", "down")
MSE.plot.mat <- MSE.plot.mat %>%
mutate(epsilon = epsilon.vec) %>%
mutate(mean = apply(MSE.dat[,-1], 1, mean)) %>%
mutate(up = apply(MSE.dat[,-1], 1, sd)) %>%
mutate(down = apply(MSE.dat[,-1], 1, sd))
MSE.plot.mat[,1] <- as.factor(epsilon.vec)
MSE.plot <- MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "thistle2") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "mediumpurple3", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "purple4", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(plot = MSE.plot, filename = "MSEvsEpsilonBetahatPNP.pdf", device = "pdf",
width = 4, height = 3)
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/HIV Transmission Network/Codes")
source("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/HIV Transmission Network/Codes/DataManage.R", echo=TRUE)
dim(J.N)
sum(HIV.status.df$HIV)
source("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/HIV Transmission Network/Codes/DataManage.R", echo=TRUE)
dim(J.N)
sum(HIV.status.df$HIV)
source("Functions.R")
source("DataManage.R")
beta.hat.nonpriv <- beta.hat.N((2*HIV.status.df$HIV-1), N, J.N)
################################################################################
############################# Required Packages ################################
require(tidyverse)
# Load required functions
source("Functions.R")
# Load data and Hamiltonian of Ising Model
source("DataManage.R")
################################################################################
############################### Parametric Bootstrap ###########################
priv.beta <- function(sigma, N, J.N, epsilon, delta, n.rep = 500){
seed.vec <- (1:n.rep)
Delta <- Delta.func(epsilon, N, J.N)
gamma <- gamma.func(N, J.N, epsilon, delta)
priv.ty <- (delta>0)
cores <- detectCores()
cl <- makeCluster(cores[1]-1)
registerDoParallel(cl)
writeLines(c("Running Function To Estimate private beta"), "log.txt")
beta.est.priv <- foreach(k=1:n.rep, .combine = rbind, .export = ls(envir=globalenv())) %dopar% {
cat(paste("Starting iteration",k,"\n"), file = "log.txt", append = T)
beta.est.priv.iter <- beta.hat.N(sigma, N, J.N,
priv = T, priv.ty = priv.ty,
Delta = Delta, gamma = gamma,
seed = seed.vec[k])
cat(paste("Completed iteration",k ,"\n"), file = "log.txt", append = T)
beta.est.priv.iter
}
stopCluster(cl)
return (as.vector(beta.est.priv))
}
MSE.func <- function(n.iter = 500, vec, mean, n.errorbar = 100){
MSE.vec <- rep(0, n.errorbar)
for (i in 1:n.errorbar){
vec.iter <- vec[(n.iter*(i-1) + 1):(n.iter * i)]
MSE.vec[i] <- sum((vec.iter - mean)^2)/n.iter
}
return (MSE.vec)
}
# MPLE estimate of beta
beta.hat.nonpriv <- beta.hat.N((2*HIV.status.df$HIV-1), N, J.N)
n.errorbar <- 100
n.iter <- 500
n.rep <- n.iter * n.errorbar
# Privacy Parameters
epsilon.vec <- c(5, 7.5, 10, 20, 50, 75, 100)
epsilon.len <- length(epsilon.vec)
delta <- 1/N
MSE.mat <- matrix(0, epsilon.len, n.errorbar)
beta.est.priv.mat <- matrix(0, nrow = epsilon.len, ncol = n.rep)
for (i in 1:epsilon.len){
beta.est.priv.mat[i,] <- priv.beta((2*HIV.status.df$HIV-1), N, J.N,
epsilon.vec[i], delta, n.rep = n.rep)
MSE.mat[i,] <- MSE.func(n.iter, beta.est.priv.mat[i,], beta.hat.nonpriv,
n.errorbar)
cat(c("Finished Epsilon", epsilon.vec[i], "\n"))
}
MSE.dat <- as_tibble(cbind(epsilon.vec, MSE.mat))
write.csv(MSE.dat, file = "MSEvsEpsilonBetahatPNP.csv")
# MSE.dat <- read.csv("MSEvsEpsilonBetahatPNP.csv")[,-1]
# epsilon.vec <- MSE.dat$epsilon.vec
# epsilon.len <- length(epsilon.vec)
MSE.plot.mat <- as_tibble(matrix(0, nrow = epsilon.len, ncol = 4))
colnames(MSE.plot.mat) <- c("epsilon", "mean", "up", "down")
MSE.plot.mat <- MSE.plot.mat %>%
mutate(epsilon = epsilon.vec) %>%
mutate(mean = apply(MSE.dat[,-1], 1, mean)) %>%
mutate(up = apply(MSE.dat[,-1], 1, sd)) %>%
mutate(down = apply(MSE.dat[,-1], 1, sd))
MSE.plot.mat[,1] <- as.factor(epsilon.vec)
MSE.plot <- MSE.plot.mat %>%
ggplot(aes(x = epsilon, y = mean)) +
geom_ribbon(aes(ymin = mean - down, ymax = mean + up, group = epsilon[1]),
fill = "thistle2") +
geom_line(aes(x = epsilon, y = mean,
group = epsilon[1]), col = "mediumpurple3", size = 1) +
geom_point(aes(x = epsilon, y = mean), col = "purple4", size = 2) +
labs(title = TeX(r'(Cost of Privacy)'),
x = TeX(r'($\epsilon$)'),
y = TeX(r'(Cost)'), color = "Legend Title\n") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = c(0.25,0.7),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(plot = MSE.plot, filename = "MSEvsEpsilonBetahatPNP.pdf", device = "pdf",
width = 4, height = 3)
setwd("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/PolBlogs Network/Code")
################################################################################
############################# Required Packages ################################
library(Matrix)
library(igraph)
library(gsbm)
require(tidyverse)
source("Functions.R")
################################################################################
############################## Loading Data ####################################
#Loading the data "blogosphere"
data(blogosphere)
# Getting the Adjacency Matrix
A.data <- blogosphere$A
# Political Leaning of the Blogs
opinion <- blogosphere$opinion
################################################################################
############################# Data Wrangling ###################################
# Number of vertices
bigdeg = which(rowSums(A.data) > 50)
A.data = A.data[-bigdeg,-bigdeg]
opinion = opinion[-bigdeg]
degmax1 = sapply(rowSums(A.data), function(x) max(x,1))
row.ij <- degmax1%o%degmax1
N <- length(opinion)
# Hamiltonian for the Ising Model
J.N <- A.data/sqrt(row.ij)
dim(J.N)
which(rowSums(A.data) == 0)
length(which(rowSums(A.data) == 0))
del = which(rowSums(A.data) == 0)
A.data <- A.data[-del,-del]
dim(A.data)
source("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/PolBlogs Network/Code/DrawNetwork.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/PolBlogs Network/Code/DrawNetwork.R", echo=TRUE)
source("C:/Users/anirbanc/Dropbox (Penn)/Private Ising Model/aistats2024/Experiments/Data/PolBlogs Network/Code/DrawNetwork.R", echo=TRUE)
################################################################################
############################# Required Packages ################################
require(tidyverse)
require(ggraph)
source("Functions.R")
################################################################################
############################## Loading Data ####################################
source("DataManage.R")
################################################################################
############################# Data Wrangling ###################################
# build the graph object
del <- which(rowSums(A.data) == 0)
A.data <- A.data[-del,-del]
network <- graph_from_adjacency_matrix(A.data, mode = "undirected")
network <- simplify(network, remove.multiple = T, remove.loops = T)
# HIV status of individuals
opinion <- opinion[-del]
sum(opinion)
require(tidyverse)
# Load required functions
source("Functions.R")
# Load data and Hamiltonian of Ising Model
source("DataManage.R")
################################################################################
############################### Parametric Bootstrap ###########################
# MPLE estimate of beta
beta.hat.nonpriv <- beta.hat.N((2*opinion-1), N, J.N)
